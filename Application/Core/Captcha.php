<?php
class Core_Captcha 
{
	/*creates captcha string and stiore it in the session.
	set or disable captcha requirements*/
	
	public function setCaptcha()
	{
		//creates captcha string and store it in the session.
		$str = $this->getRandomString(4,7);
		$_SESSION['captcha'] = $str;
	}
	
	
	public function isCaptchaRequired()
	{
		//chek if captcha is required
		if ($_SESSION['isCaptchaRequired'] == true){
			return true;
		}
		return false;
	}
	
	public function requireCaptcha()
	{
		//set captcha requirement
		$_SESSION['isCaptchaRequired'] = true;
	}
	
	public function disableCaptcha()
	{
		//disable captcha requirement
		$_SESSION['isCaptchaRequired'] = false;
	}
	
	public function view()
	{
		$view = new Core_View();
		$view->renderPartial('View_Captcha.php');
		
	}
	
	
	
	private function getRandomString($min,$max)
	{
		$letters = array('a','b','c','d','e','f','g','h','i','j','k','n',
							'p','q','s','u','x','y','z',
							'2','3','4','5','6','7','8','9');
			$length = mt_rand($min,$max);
			$str='';
			for($i=0;$i<$length;$i++){
				$str .= $letters[array_rand($letters)];
			}
			return $str;	
	}
	
	public function chekCaptcha($captcha)
	{
		//chek if captcha string typed by the user is the same as generated by php
		
		$capcha = mb_strtolower($captcha);
		$realCaptcha = mb_strtolower($this->getCaptchaString());
		if ($captcha == $realCaptcha){
			return true;
		} 
		return false;
	}
	
	private function getCaptchaString()
	{
		//return captcha string stored in the session
		return (isset($_SESSION['captcha']) ? $_SESSION['captcha'] : false);
	}

}

